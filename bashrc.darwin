# Complain if we don't have bash_completion
. $(brew --prefix)/etc/bash_completion

# https://github.com/git/git/blob/master/contrib/completion/git-completion.bash
. /Library/Developer/CommandLineTools/usr/share/git-core/git-completion.bash

# don't use apple's openssl
export LDFLAGS=-L/usr/local/opt/openssl/lib
export CPPFLAGS=-I/usr/local/opt/openssl/include
export PKG_CONFIG_PATH=/usr/local/opt/openssl/lib/pkgconfig

# python3 virtualenvwrapper
export WORKON_HOME=${HOME}/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3
mkdir -p $WORKON_HOME
. /usr/local/bin/virtualenvwrapper.sh

# golang
export GOROOT=/usr/local/opt/go/libexec
export GOPATH=$HOME/workspace/go
export PATH=${PATH}:$GOROOT/bin:$GOPATH/bin

# java
export USE_JAVA11=1
if [ -n "${USE_JAVA11}" ]; then
    # brew cask install java11
    export JAVA_HOME=$(/usr/libexec/java_home -v11)
elif [ -n "${USE_ZULU_JAVA8}" ]; then
    export JAVA_HOME=$(/usr/libexec/java_home -v1.8.0_252)
else
    # brew cask install adoptopenjdk/openjdk/adoptopenjdk8
    export JAVA_HOME=$(/usr/libexec/java_home -v1.8.0_242)
fi
export PATH=$JAVA_HOME/bin:${PATH}

# tex
if [ -d "/Library/TeX/Root/bin/x86_64-darwin" ]; then
    export PATH=$PATH:/Library/TeX/Root/bin/x86_64-darwin
fi

# nvm
if [ -d "${HOME}/.nvm" ]; then
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

# aws-cli
if [[ -n `which aws_completer` ]]; then
    complete -C `which aws_completer` aws
fi

# terraform
if [[ -n `which terraform` ]]; then
    # terraform logging to stdout
    # export TF_LOG=1
    complete -C /usr/local/bin/terraform terraform
fi

# darwin-specific
export PATH=${PATH}:\
/usr/local/opt/tomcat@8/bin:\
/usr/local/opt/thrift@0.9/bin:\
/usr/local/opt/mysql-client/bin:\
/Applications/MacVim.app/Contents/bin:\
/Users/michael.cadiz/Library/Python/2.7/bin
